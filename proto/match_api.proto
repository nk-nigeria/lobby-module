// Copyright 2020 The Nakama Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

// The realtime protocol for the template match engine.
package api;

option go_package = "github.com/ciaolink-game-platform/cgp-lobby-module/api";

// The complete set of rpc used for communication between clients and server.
enum RPCCode {
  // No opcode specified. Unused.
  RPC_FIND_MATCH = 0;
  RPC_CREATE_MATCH = 1;
}

// Payload for an RPC request to find a match.
message RpcFindMatchRequest {
  // User can choose a fast or normal speed match.
  int32 mark_unit = 1;
  string game_code = 2;
  bool with_non_open = 3;
  bool create = 4;
  int32 mock_code_card = 5;
}

message Match {
  string match_id = 1;
  int32 size = 2;
  int32 max_size = 3;
  string name = 4;
  int32 mark_unit = 5;
  bool open = 6;
  int32 mock_code_card = 7;
}

// Payload for an RPC response containing match IDs the user can join.
message RpcFindMatchResponse {
  // One or more matches that fit the user's request.
  repeated Match matches = 1;
}

// Payload for an RPC request to find a match.
message RpcCreateMatchRequest {
  int32 mark_unit = 1;
  string game_code = 2;
  string name = 3;
  string password = 4;
}

// Payload for an RPC response containing match IDs the user can join.
message RpcCreateMatchResponse {
  // One or more matches that fit the user's request.
  string match_id = 1;
}

message Bet {
  bool enable = 1;
  int32 mark_unit = 2; // mức cược (chip)
}

message Bets {
  repeated Bet bets = 1;
}
